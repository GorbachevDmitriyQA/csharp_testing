// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using System.Xml.Serialization;
using Newtonsoft.Json;

namespace Addressbook
{

    [TestFixture]
    public class ContactTest : TestBaseAuth
    {
        public static IEnumerable<PersonInfo> PersonDataFromCsvFile()
        {
            List<PersonInfo> persons = new List<PersonInfo>();
            string[] lines = File.ReadAllLines(@"persons.csv");
            foreach (string line in lines)
            {
                string[] parts = line.Split(",");
                persons.Add(new PersonInfo()
                {
                    LastName = parts[0],
                    FirstName = parts[1],
                    Address = parts[2],
                    HomePhone = parts[3],
                    WorkPhone = parts[4],
                    MobilePhone = parts[5],
                    Email = parts[6]
                });
            }
            return persons;
        }
        public static IEnumerable<PersonInfo> PersonDataFromXmlFile()
        {
            return (List<PersonInfo>) new XmlSerializer(typeof(List<PersonInfo>)).Deserialize(new StreamReader(@"persons.xml"));
        }

        public static IEnumerable<PersonInfo> PersonDataFromJsonFile()
        {
           return JsonConvert.DeserializeObject<List<PersonInfo>>(File.ReadAllText(@"persons.json"));
        }


        [Test, TestCaseSource(nameof(PersonDataFromJsonFile))]
        public void Contact(PersonInfo data)
        {
            app.Navigator.GoToContactPage();
            List<PersonInfo> oldContact = app.ContactHelper.GetContactList();
            app.Navigator.GoToNewContactPage();
            app.ContactHelper.Create(data);
            List<PersonInfo> newContact = app.ContactHelper.GetContactList();
            Assert.AreEqual(oldContact.Count + 1, newContact.Count);
            app.AuthUser.Logout();

        }
    }
}
